{"ast":null,"code":"import _toConsumableArray from \"D:/Projects/Work in progress/social-media-app-master/social-media-app-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/Projects/Work in progress/social-media-app-master/social-media-app-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled.js';\nimport { range } from '../utils/range/range.js';\nvar DOTS = \"dots\";\nfunction usePagination(_ref) {\n  var total = _ref.total,\n    _ref$siblings = _ref.siblings,\n    siblings = _ref$siblings === void 0 ? 1 : _ref$siblings,\n    _ref$boundaries = _ref.boundaries,\n    boundaries = _ref$boundaries === void 0 ? 1 : _ref$boundaries,\n    page = _ref.page,\n    _ref$initialPage = _ref.initialPage,\n    initialPage = _ref$initialPage === void 0 ? 1 : _ref$initialPage,\n    onChange = _ref.onChange;\n  var _useUncontrolled = useUncontrolled({\n      value: page,\n      onChange: onChange,\n      defaultValue: initialPage,\n      finalValue: initialPage,\n      rule: function rule(_page) {\n        return typeof _page === \"number\" && _page <= total;\n      }\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n    activePage = _useUncontrolled2[0],\n    setActivePage = _useUncontrolled2[1];\n  var setPage = function setPage(pageNumber) {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > total) {\n      setActivePage(total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n  var next = function next() {\n    return setPage(activePage + 1);\n  };\n  var previous = function previous() {\n    return setPage(activePage - 1);\n  };\n  var first = function first() {\n    return setPage(1);\n  };\n  var last = function last() {\n    return setPage(total);\n  };\n  var paginationRange = useMemo(function () {\n    var totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= total) {\n      return range(1, total);\n    }\n    var leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    var rightSiblingIndex = Math.min(activePage + siblings, total - boundaries);\n    var shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    var shouldShowRightDots = rightSiblingIndex < total - (boundaries + 1);\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      var leftItemCount = siblings * 2 + boundaries + 2;\n      return [].concat(_toConsumableArray(range(1, leftItemCount)), [DOTS], _toConsumableArray(range(total - (boundaries - 1), total)));\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      var rightItemCount = boundaries + 1 + 2 * siblings;\n      return [].concat(_toConsumableArray(range(1, boundaries)), [DOTS], _toConsumableArray(range(total - rightItemCount, total)));\n    }\n    return [].concat(_toConsumableArray(range(1, boundaries)), [DOTS], _toConsumableArray(range(leftSiblingIndex, rightSiblingIndex)), [DOTS], _toConsumableArray(range(total - boundaries + 1, total)));\n  }, [total, siblings, activePage]);\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage: setPage,\n    next: next,\n    previous: previous,\n    first: first,\n    last: last\n  };\n}\nexport { DOTS, usePagination };","map":{"version":3,"names":["DOTS","usePagination","_ref","total","_ref$siblings","siblings","_ref$boundaries","boundaries","page","_ref$initialPage","initialPage","onChange","_useUncontrolled","useUncontrolled","value","defaultValue","finalValue","rule","_page","_useUncontrolled2","_slicedToArray","activePage","setActivePage","setPage","pageNumber","next","previous","first","last","paginationRange","useMemo","totalPageNumbers","range","leftSiblingIndex","Math","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftItemCount","concat","_toConsumableArray","rightItemCount","active"],"sources":["D:\\Projects\\Work in progress\\social-media-app-master\\social-media-app-master\\node_modules\\@mantine\\hooks\\src\\use-pagination\\use-pagination.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled';\nimport { range } from '../utils';\n\nexport const DOTS = 'dots';\n\nexport interface PaginationParams {\n  /** Page selected on initial render, defaults to 1 */\n  initialPage?: number;\n\n  /** Controlled active page number */\n  page?: number;\n\n  /** Total amount of pages */\n  total: number;\n\n  /** Siblings amount on left/right side of selected page, defaults to 1 */\n  siblings?: number;\n\n  /** Amount of elements visible on left/right edges, defaults to 1  */\n  boundaries?: number;\n\n  /** Callback fired after change of each page */\n  onChange?: (page: number) => void;\n}\n\nexport function usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange,\n}: PaginationParams) {\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage,\n    rule: (_page) => typeof _page === 'number' && _page <= total,\n  });\n\n  const setPage = (pageNumber: number) => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > total) {\n      setActivePage(total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(total);\n\n  const paginationRange = useMemo((): (number | 'dots')[] => {\n    // Pages count is determined as siblings (left/right) + boundaries(left/right) + currentPage + 2*DOTS\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n\n    /*\n     * If the number of pages is less than the page numbers we want to show in our\n     * paginationComponent, we return the range [1..total]\n     */\n    if (totalPageNumbers >= total) {\n      return range(1, total);\n    }\n\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, total - boundaries);\n\n    /*\n     * We do not want to show dots if there is only one position left\n     * after/before the left/right page count as that would lead to a change if our Pagination\n     * component size which we do not want\n     */\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(total - (boundaries - 1), total)];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(total - rightItemCount, total)];\n    }\n\n    return [\n      ...range(1, boundaries),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(total - boundaries + 1, total),\n    ];\n  }, [total, siblings, activePage]);\n\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}