{"ast":null,"code":"import _objectSpread from \"D:/Projects/Work in progress/social-media-app-master/social-media-app-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/Projects/Work in progress/social-media-app-master/social-media-app-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"children\"];\nimport { composeRefs as e } from \"@radix-ui/react-compose-refs\";\nimport * as t from \"react\";\nimport r from \"@babel/runtime/helpers/esm/extends\";\nexport var Slot = /*#__PURE__*/t.forwardRef(function (e, o) {\n  var a = e.children,\n    s = _objectWithoutProperties(e, _excluded);\n  return t.Children.toArray(a).some(l) ? /*#__PURE__*/t.createElement(t.Fragment, null, t.Children.map(a, function (e) {\n    return l(e) ? /*#__PURE__*/t.createElement(n, r({}, s, {\n      ref: o\n    }), e.props.children) : e;\n  })) : /*#__PURE__*/t.createElement(n, r({}, s, {\n    ref: o\n  }), a);\n});\nSlot.displayName = \"Slot\";\nvar n = /*#__PURE__*/t.forwardRef(function (r, n) {\n  var l = r.children,\n    a = _objectWithoutProperties(r, _excluded2); /*#__PURE__*/\n  return t.isValidElement(l) ? /*#__PURE__*/t.cloneElement(l, _objectSpread(_objectSpread({}, o(a, l.props)), {}, {\n    ref: e(n, l.ref)\n  })) : t.Children.count(l) > 1 ? t.Children.only(null) : null;\n});\nn.displayName = \"SlotClone\";\nexport var Slottable = function Slottable(_ref) {\n  var e = _ref.children;\n  return /*#__PURE__*/t.createElement(t.Fragment, null, e);\n};\nfunction l(e) {\n  /*#__PURE__*/return t.isValidElement(e) && e.type === Slottable;\n}\nfunction o(e, t) {\n  var r = _objectSpread({}, t);\n  var _loop = function _loop(_n) {\n    var l = e[_n],\n      o = t[_n];\n    /^on[A-Z]/.test(_n) ? r[_n] = function () {\n      null == o || o.apply(void 0, arguments), null == l || l.apply(void 0, arguments);\n    } : \"style\" === _n ? r[_n] = _objectSpread(_objectSpread({}, l), o) : \"className\" === _n && (r[_n] = [l, o].filter(Boolean).join(\" \"));\n  };\n  for (var _n in t) {\n    _loop(_n);\n  }\n  return _objectSpread(_objectSpread({}, e), r);\n}\nexport var Root = Slot;","map":{"version":3,"names":["Slot","t","forwardRef","e","o","a","children","s","_objectWithoutProperties","_excluded","Children","toArray","some","l","createElement","Fragment","map","n","r","ref","props","displayName","_excluded2","isValidElement","cloneElement","_objectSpread","count","only","Slottable","_ref","type","_loop","test","apply","arguments","filter","Boolean","join","Root"],"sources":["D:\\Projects\\Work in progress\\social-media-app-master\\social-media-app-master\\node_modules\\@radix-ui\\react-slot\\dist\\packages\\react\\slot\\src\\Slot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.Children.toArray(children).some(isSlottable)) {\n    return (\n      <>\n        {React.Children.map(children, (child) => {\n          return isSlottable(child) ? (\n            <SlotClone {...slotProps} ref={forwardedRef}>\n              {child.props.children}\n            </SlotClone>\n          ) : (\n            child\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}