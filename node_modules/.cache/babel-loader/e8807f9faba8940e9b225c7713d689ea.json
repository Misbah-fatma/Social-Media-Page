{"ast":null,"code":"import _slicedToArray from \"D:/Projects/Work in progress/social-media-app-master/social-media-app-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useLayoutEffect as e } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs as n } from \"@radix-ui/react-compose-refs\";\nimport * as t from \"react\";\nexport var Presence = function Presence(u) {\n  var o = u.present,\n    i = u.children,\n    s = function (n) {\n      var _t$useState = t.useState(),\n        _t$useState2 = _slicedToArray(_t$useState, 2),\n        u = _t$useState2[0],\n        o = _t$useState2[1],\n        i = t.useRef({}),\n        s = t.useRef(n),\n        c = t.useRef(\"none\"),\n        a = n ? \"mounted\" : \"unmounted\",\n        _ref = function (e, n) {\n          return t.useReducer(function (e, t) {\n            var r = n[e][t];\n            return null != r ? r : e;\n          }, e);\n        }(a, {\n          mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n          },\n          unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n          },\n          unmounted: {\n            MOUNT: \"mounted\"\n          }\n        }),\n        _ref2 = _slicedToArray(_ref, 2),\n        d = _ref2[0],\n        m = _ref2[1];\n      return t.useEffect(function () {\n        var e = r(i.current);\n        c.current = \"mounted\" === d ? e : \"none\";\n      }, [d]), e(function () {\n        var e = i.current,\n          t = s.current;\n        if (t !== n) {\n          var _u = c.current,\n            _o = r(e);\n          if (n) m(\"MOUNT\");else if (\"none\" === _o || \"none\" === (null == e ? void 0 : e.display)) m(\"UNMOUNT\");else {\n            var _e = _u !== _o;\n            m(t && _e ? \"ANIMATION_OUT\" : \"UNMOUNT\");\n          }\n          s.current = n;\n        }\n      }, [n, m]), e(function () {\n        if (u) {\n          var _e2 = function _e2(e) {\n              var n = r(i.current).includes(e.animationName);\n              e.target === u && n && m(\"ANIMATION_END\");\n            },\n            _n = function _n(e) {\n              e.target === u && (c.current = r(i.current));\n            };\n          return u.addEventListener(\"animationstart\", _n), u.addEventListener(\"animationcancel\", _e2), u.addEventListener(\"animationend\", _e2), function () {\n            u.removeEventListener(\"animationstart\", _n), u.removeEventListener(\"animationcancel\", _e2), u.removeEventListener(\"animationend\", _e2);\n          };\n        }\n        m(\"ANIMATION_END\");\n      }, [u, m]), {\n        isPresent: [\"mounted\", \"unmountSuspended\"].includes(d),\n        ref: t.useCallback(function (e) {\n          e && (i.current = getComputedStyle(e)), o(e);\n        }, [])\n      };\n    }(o),\n    c = \"function\" == typeof i ? i({\n      present: s.isPresent\n    }) : t.Children.only(i),\n    a = n(s.ref, c.ref);\n  return \"function\" == typeof i || s.isPresent ? /*#__PURE__*/t.cloneElement(c, {\n    ref: a\n  }) : null;\n};\nfunction r(e) {\n  return (null == e ? void 0 : e.animationName) || \"none\";\n}\nPresence.displayName = \"Presence\";","map":{"version":3,"names":["Presence","u","o","present","i","children","s","n","_t$useState","t","useState","_t$useState2","_slicedToArray","useRef","c","a","_ref","e","useReducer","r","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","_ref2","d","m","useEffect","current","display","includes","animationName","target","addEventListener","removeEventListener","isPresent","ref","useCallback","getComputedStyle","Children","only","cloneElement","displayName"],"sources":["D:\\Projects\\Work in progress\\social-media-app-master\\social-media-app-master\\node_modules\\@radix-ui\\react-presence\\dist\\packages\\react\\presence\\src\\Presence.tsx","D:\\Projects\\Work in progress\\social-media-app-master\\social-media-app-master\\node_modules\\@radix-ui\\react-presence\\dist\\packages\\react\\presence\\src\\useStateMachine.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  present: boolean;\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send('ANIMATION_END');\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// ðŸ¤¯ https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}